{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","answers","imagePaths","useState","stage","setStage","inputValue","setInputValue","imageSrc","setImageSrc","useEffect","window","twttr","widgets","load","document","getElementById","className","style","marginTop","type","name","value","onChange","e","target","onClick","event","preventDefault","src","alt","id","href","encodeURIComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAsDeA,MAnDf,WACE,IAAMC,EAAU,CAAC,qBAAM,eAAK,2BAAO,MAC7BC,EAAa,CAAC,aAAa,aAAa,aAAa,cAF9C,EAIYC,mBAAiB,GAJ7B,mBAINC,EAJM,KAIAC,EAJA,OAKsBF,mBAAiB,IALvC,mBAKNG,EALM,KAKKC,EALL,OAMkBJ,mBAAiBD,EAAW,IAN9C,mBAMNM,EANM,KAMGC,EANH,KAqBb,OAPAC,qBAAU,WACI,IAARN,QAC4B,IAAzBO,OAAeC,OACjBD,OAAeC,MAAMC,QAAQC,KAAKC,SAASC,eAAe,2BAG/D,CAACZ,IAED,sBAAKa,UAAU,MAAf,UACE,qDAEEb,EAAQ,EACL,qCACC,qBAAKc,MAAO,CAACC,UAAW,QAAxB,SACE,iCACE,uBAAOC,KAAK,OAAOC,KAAK,QAAQC,MAAOhB,EAC/BiB,SAAU,SAACC,GAAD,OAAOjB,EAAciB,EAAEC,OAAOH,UAChD,wBAAQF,KAAK,SAASM,QAAS,SAACC,GAAUA,EAAMC,iBAvBxDtB,IAAeL,EAAQG,KACzBC,EAASD,EAAM,GACfK,EAAYP,EAAWE,EAAM,IAC7BG,EAAc,MAoBJ,+BAGJ,qBAAKW,MAAO,CAACC,UAAW,QAAxB,SACE,qBAAKF,UAAU,UAAUY,IAAK,KAAKrB,EAAUsB,IAAI,kBAGpD,qCACD,qBAAKZ,MAAO,CAACC,UAAW,QAAxB,SAAkC,yFAClC,mBACEY,GAAG,uBACHd,UAAU,uBACVe,KAAI,gDAA2CC,mBAxC/B,0FAwCZ,gBAAwFA,mBAAmB,kDAHjH,0BC7BKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BkB,K","file":"static/js/main.0b3c7402.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const answers = ['こたえ','回答','気候変動','46']\n  const imagePaths = ['stage0.png','stage1.png','stage2.png','stage3.png']\n  const clearTweetMessage = '#小泉謎 をすべて解き明かした！'\n  const [stage,setStage] = useState<number>(0)\n  const [inputValue,setInputValue] = useState<string>('')\n  const [imageSrc,setImageSrc] = useState<string>(imagePaths[0])\n  const checkAnswer = () => {\n    if (inputValue === answers[stage]) {\n      setStage(stage+1)\n      setImageSrc(imagePaths[stage+1])\n      setInputValue('')\n    }\n  }\n  useEffect(()=>{\n    if (stage===4) {\n      if ((window as any).twttr !== void 0) {\n        (window as any).twttr.widgets.load(document.getElementById('twitter-share-button'));\n      }\n    }\n  },[stage])\n  return (\n    <div className=\"App\">\n      <div>小泉謎</div>\n      {\n        stage < 4\n         ? <>\n            <div style={{marginTop: '32px'}}>\n              <form>\n                <input type=\"text\" name=\"atext\" value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}/>\n                <button type=\"submit\" onClick={(event)=> {event.preventDefault(); checkAnswer()}}>回答</button>\n              </form>\n            </div>\n            <div style={{marginTop: '32px'}}>\n              <img className=\"image-1\" src={'./'+imageSrc} alt=\"question\"/>\n            </div>\n         </>\n         : <>\n          <div style={{marginTop: '32px'}}>{\"小泉謎をすべて解き明かした！\"}</div>\n          <a\n            id=\"twitter-share-button\"\n            className=\"twitter-share-button\"\n            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(clearTweetMessage)}&url=${encodeURIComponent(\"https://inrivity.github.io/koizumi/index.html\")}`}>\n            Tweet</a>\n          </>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}